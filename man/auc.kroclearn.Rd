% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auc.kroclearn.R
\name{auc.kroclearn}
\alias{auc.kroclearn}
\title{Compute AUC for Kernel AUC Maximization Models}
\usage{
\method{auc}{kroclearn}(object, newdata, y, ...)
}
\arguments{
\item{object}{A fitted model object of class \code{"kroclearn"} (kernel model).}

\item{newdata}{A matrix or data.frame of test predictors. Must have the same
structure as the training data (categorical variables are dummy-aligned
automatically).}

\item{y}{Response vector of test labels (\{-1, 1\} or convertible).}

\item{...}{Not used.}
}
\value{
A numeric scalar giving the estimated AUC.
}
\description{
Estimate the Area Under the ROC Curve (AUC) for a fitted kernel-based model on new data.
The AUC is defined as the proportion of positive–negative pairs for which
the positive sample receives a higher score than the negative.
}
\details{
For kernel models (\code{kroclearn}), decision scores are computed via kernel
evaluations between the test set and the training set (or Nyström landmarks
if approximation was used).
If Nyström approximation was applied during training, the same low-rank
feature representation is used for the test data by projecting onto the
landmark-based feature space.
The intercept, if present, does not affect AUC since only relative score
differences matter.
}
\examples{
\dontrun{
set.seed(123)

# Training data (nonlinear, circular decision boundary)
n_train <- 1500
r_train <- sqrt(runif(n_train, 0.05, 1))
theta_train <- runif(n_train, 0, 2*pi)
X_train <- cbind(r_train * cos(theta_train), r_train * sin(theta_train))
y_train <- ifelse(r_train < 0.5, 1, -1)

# Test data
n_test <- 300
r_test <- sqrt(runif(n_test, 0.05, 1))
theta_test <- runif(n_test, 0, 2*pi)
X_test <- cbind(r_test * cos(theta_test), r_test * sin(theta_test))
y_test <- ifelse(r_test < 0.5, 1, -1)

# Fit kernel model with RBF kernel
fit <- kroclearn(X_train, y_train, lambda = 0.1, kernel = "radial")

# Compute AUC on test data
auc(fit, X_test, y_test)
}
}
